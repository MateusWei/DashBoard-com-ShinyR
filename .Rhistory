abline(v = xbarra(), col= 'blue')
})
output$reg = renderPlot({
#gráfico de regressão com dados 'cars' aqui!
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp()
# Run the application
shinyApp(ui = ui, server = server)
library(shiny); runApp('main.R')
-34.868, -34.868, -34.868)
#imports
library(ggplot2)
library(OpenStreetMap)
long = c(-34.868, -34.868, -34.868)
lat = c(-8.045, -8.047, -8.048)
bb = matrix(c(-34.87, -34.86,
-8.06, -8.04), 2,2, byrow=T)
rownames(bb) = c('long', 'lat')
colnames(bb) = c('min', 'max')
crs = CRS("+proj=utm +zone=25 +south +datum=WGS84")
df = data.frame(veloc = c(3,4,5))
df$long = long
df$lat = lat
lonr = bb[1,2]; latu = bb[2,2]
lonl = bb[1,1]; latd = bb[2,1]
sa_map = openmap(c(latu+0.001, lonl-0.001),
c(latd-0.001, lonr+0.001),
type = "osm", mergeTiles = TRUE, minNumTiles = 9L)
sa_map2 = openproj(sa_map)
sa_map2_plt = OpenStreetMap::autoplot.OpenStreetMap(sa_map2) +
geom_point(data = df,
aes(x = long, y = lat), # slightly shift the points
colour = "red", size =  2.5) +
xlab("Longitude") + ylab("Latitude")
sa_map2_plt
#imports
library(shiny)
library(tidyverse)
library(readxl)
library(dplyr)
# recebendo os dados da planilha
df <- read_excel("dados_de_caminhada_corrida.xlsx")
View(df)
df
#imports
library(ggplot2)
library(OpenStreetMap)
long = c(-34.868, -34.868, -34.868)
lat = c(-8.045, -8.047, -8.048)
bb = matrix(c(-30.87, -40.86,
-6.06, -9.04), 2,2, byrow=T)
rownames(bb) = c('long', 'lat')
colnames(bb) = c('min', 'max')
crs = CRS("+proj=utm +zone=25 +south +datum=WGS84")
df = data.frame(veloc = c(3,4,5))
df$long = long
df$lat = lat
lonr = bb[1,2]; latu = bb[2,2]
lonl = bb[1,1]; latd = bb[2,1]
sa_map = openmap(c(latu+0.001, lonl-0.001),
c(latd-0.001, lonr+0.001),
type = "osm", mergeTiles = TRUE, minNumTiles = 9L)
sa_map2 = openproj(sa_map)
sa_map2_plt = OpenStreetMap::autoplot.OpenStreetMap(sa_map2) +
geom_point(data = df,
aes(x = long, y = lat), # slightly shift the points
colour = "red", size =  2.5) +
xlab("Longitude") + ylab("Latitude")
sa_map2_plt
runApp('main.R')
runApp('main.R')
library(OpenStreetMap)
#imports
library(ggplot2)
library(OpenStreetMap)
long = c(-34.868, -34.868, -34.868)
lat = c(-8.045, -8.047, -8.048)
bb = matrix(c(-34.87, -34.86,
-8.06, -8.04), 2,2, byrow=T)
rownames(bb) = c('long', 'lat')
colnames(bb) = c('min', 'max')
crs = CRS("+proj=utm +zone=25 +south +datum=WGS84")
df = data.frame(veloc = c(3,4,5))
df$long = long
df$lat = lat
lonr = bb[1,2]; latu = bb[2,2]
lonl = bb[1,1]; latd = bb[2,1]
sa_map = openmap(c(latu+0.001, lonl-0.001),
c(latd-0.001, lonr+0.001),
type = "osm", mergeTiles = TRUE, minNumTiles = 9L)
sa_map2 = openproj(sa_map)
sa_map2_plt = OpenStreetMap::autoplot.OpenStreetMap(sa_map2) +
geom_point(data = df,
aes(x = long, y = lat), # slightly shift the points
colour = "red", size =  2.5) +
xlab("Longitude") + ylab("Latitude")
sa_map2_plt
#imports
library(ggplot2)
library(OpenStreetMap)
long = c(-34.868, -34.868, -34.868)
lat = c(-8.045, -8.047, -8.048)
bb = matrix(c(-34.87, -34.86,
-8.06, -8.04), 2,2, byrow=T)
rownames(bb) = c('long', 'lat')
colnames(bb) = c('min', 'max')
df = data.frame(veloc = c(3,4,5))
df$long = long
df$lat = lat
lonr = bb[1,2]; latu = bb[2,2]
lonl = bb[1,1]; latd = bb[2,1]
sa_map = openmap(c(latu+0.001, lonl-0.001),
c(latd-0.001, lonr+0.001),
type = "osm", mergeTiles = TRUE, minNumTiles = 9L)
sa_map2 = openproj(sa_map)
sa_map2_plt = OpenStreetMap::autoplot.OpenStreetMap(sa_map2) +
geom_point(data = df,
aes(x = long, y = lat), # slightly shift the points
colour = "red", size =  2.5) +
xlab("Longitude") + ylab("Latitude")
sa_map2_plt
runApp('main.R')
runApp('main.R')
#imports
library(tidyverse)
library(OpenStreetMap)
library(readxl)
library(dplyr)
library(ggplot2)
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha
planilha$Latitude <- as.numeric(dados$Latitude)
planilha$Longitude <- as.numeric(dados$Longitude)
planilha$Latitude <- as.numeric(planilha$Latitude)
planilha$Longitude <- as.numeric(planilha$Longitude)
planilha
View(planilha)
View(planilha)
planilha
options(digits = 6)
planilha
#imports
library(tidyverse)
library(OpenStreetMap)
library(readxl)
library(dplyr)
library(ggplot2)
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha <- planilha %>% mutate(Latitude = round(as.numeric(Latitude), 6),
Longitude = round(as.numeric(Longitude), 6))
planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha
planilha <- planilha %>% mutate(Latitude = round(as.numeric(Latitude), 6),
Longitude = round(as.numeric(Longitude), 6))
planilha
View(planilha)
View(planilha)
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
View(planilha)
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha
planilha <- planilha %>% mutate(Latitude = round(as.numeric(Latitude), 6),
Longitude = round(as.numeric(Longitude), 6))
planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha
#imports
library(tidyverse)
library(OpenStreetMap)
library(readxl)
library(dplyr)
library(ggplot2)
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha
long = as.numeric(planilha$Longitude)
lat = as.numeric(planilha$Latitude)
bb = matrix(c(-34.87, -34.86,
-8.06, -8.04), 2,2, byrow=T)
rownames(bb) = c('long', 'lat')
colnames(bb) = c('min', 'max')
df = data.frame(veloc = c(3,4,5))
df$long = long
df$lat = lat
lonr = bb[1,2]; latu = bb[2,2]
lonl = bb[1,1]; latd = bb[2,1]
sa_map = openmap(c(latu+0.001, lonl-0.001),
c(latd-0.001, lonr+0.001),
type = "osm", mergeTiles = TRUE, minNumTiles = 9L)
sa_map2 = openproj(sa_map)
sa_map2_plt = OpenStreetMap::autoplot.OpenStreetMap(sa_map2) +
geom_point(data = df,
aes(x = long, y = lat), # slightly shift the points
colour = "red", size =  2.5) +
xlab("Longitude") + ylab("Latitude")
sa_map2_plt
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha
long = as.numeric(planilha$Longitude)
lat = as.numeric(planilha$Latitude)
bb = matrix(c(-34.87, -34.86,
-8.06, -8.04), 2,2, byrow=T)
rownames(bb) = c('long', 'lat')
colnames(bb) = c('min', 'max')
df = data.frame(veloc = planilha$Velocidade)
df$long = long
df$lat = lat
lonr = bb[1,2]; latu = bb[2,2]
lonl = bb[1,1]; latd = bb[2,1]
sa_map = openmap(c(latu+0.001, lonl-0.001),
c(latd-0.001, lonr+0.001),
type = "osm", mergeTiles = TRUE, minNumTiles = 9L)
sa_map2 = openproj(sa_map)
sa_map2_plt = OpenStreetMap::autoplot.OpenStreetMap(sa_map2) +
geom_point(data = df,
aes(x = long, y = lat), # slightly shift the points
colour = "red", size =  2.5) +
xlab("Longitude") + ylab("Latitude")
sa_map2_plt
View(df)
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha
long = as.numeric(planilha$Longitude)
lat = as.numeric(planilha$Latitude)
bb = matrix(c(-34.9509, -34.9494, -8.01861, -8.01420), 2,2, byrow=T)
rownames(bb) = c('long', 'lat')
colnames(bb) = c('min', 'max')
df = data.frame(veloc = planilha$Velocidade)
df$long = long
df$lat = lat
lonr = bb[1,2]; latu = bb[2,2]
lonl = bb[1,1]; latd = bb[2,1]
sa_map = openmap(c(latu+0.001, lonl-0.001),
c(latd-0.001, lonr+0.001),
type = "osm", mergeTiles = TRUE, minNumTiles = 9L)
sa_map2 = openproj(sa_map)
sa_map2_plt = OpenStreetMap::autoplot.OpenStreetMap(sa_map2) +
geom_point(data = df,
aes(x = long, y = lat), # slightly shift the points
colour = "red", size =  2.5) +
xlab("Longitude") + ylab("Latitude")
sa_map2_plt
runApp('main.R')
#imports
library(shiny)
library(tidyverse)
library(OpenStreetMap)
library(readxl)
library(dplyr)
library(ggplot2)
runApp('main.R')
runApp('main.R')
runApp('main.R')
View(cars)
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
View(planilha)
planilha
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha
runApp('main.R')
runApp('main.R')
intervalo = reactive({
as.numeric(input$ic)
})
hora_inicial <- as.POSIXct("2023-03-23 18:45:18")
hora_final <- as.POSIXct("2023-03-23 18:49:23")
caminhada <- subset(planilha, Hora >= hora_inicial & Hora <= hora_final)
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as.POSIXct(planilha$Hora)
caminhada <- subset(planilha, Hora >= hora_inicial & Hora <= hora_final)
View(caminhada)
View(planilha)
planilha
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as.POSIXct(planilha$Hora)
hora_inicial <- as.POSIXct("2023-03-23 18:45:18")
hora_final <- as.POSIXct("2023-03-23 18:49:23")
caminhada <- subset(planilha, Hora >= hora_inicial & Hora <= hora_final)
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
hora_inicial <- as.POSIXct("2023-03-23 18:45:18")
hora_final <- as.POSIXct("2023-03-23 18:49:23")
caminhada <- subset(planilha, Hora >= hora_inicial & Hora <= hora_final)
View(caminhada)
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
hora_inicial <- as.POSIXct("2023-03-23 18:45:18")
hora_final <- as.POSIXct("2023-03-23 18:49:23")
caminhada <- planilha %>% filter(Hora >= hora_inicial & Hora <= hora_final)
str(planilha)
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha$Hora <- as.POSIXct(planilha$Hora, format = "%Y-%m-%d %H:%M:%S")
hora_inicial <- as.POSIXct("2023-03-23 18:45:18")
hora_final <- as.POSIXct("2023-03-23 18:49:23")
caminhada <- subset(planilha, Hora >= hora_inicial & Hora <= hora_final)
str(planilha)
planilha
hora_inicial <- as.POSIXct("2023-03-23 18:45:18", format = "%Y-%m-%d %H:%M:%S")
hora_final <- as.POSIXct("2023-03-23 18:49:23", format = "%Y-%m-%d %H:%M:%S")
caminhada <- subset(planilha, Hora >= hora_inicial & Hora <= hora_final)
caminhada
caminhada <- subset(planilha, Hora >= hora_inicial)
caminhada <- subset(planilha)
caminhada <- subset(planilha, Hora <= hora_inicial)
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as.POSIXct(planilha$Hora, format = "%Y-%m-%d %H:%M:%S")
hora_inicial <- as.POSIXct("2023-03-23 18:45:18", format = "%Y-%m-%d %H:%M:%S")
hora_final <- as.POSIXct("2023-03-23 18:49:23", format = "%Y-%m-%d %H:%M:%S")
caminhada <- subset(planilha, Hora <= hora_inicial)
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as.POSIXct(planilha$Hora, format = "%Y-%m-%d %H:%M:%S")
hora_inicial <- as.POSIXct("2023-03-23 18:45:18", format = "%Y-%m-%d %H:%M:%S")
hora_final <- as.POSIXct("2023-03-23 18:49:23", format = "%Y-%m-%d %H:%M:%S")
caminhada <- subset(planilha, Hora < hora_inicial)
caminhada
planilha
View(caminhada)
View(caminhada)
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as.POSIXct(planilha$Hora, format = "%Y-%m-%d %H:%M:%S")
hora_inicial <- as.POSIXct("2023-03-23 14:26:58", format = "%Y-%m-%d %H:%M:%S")
hora_final <- as.POSIXct("2023-03-23 18:49:23", format = "%Y-%m-%d %H:%M:%S")
caminhada <- subset(planilha, Hora < hora_inicial)
View(planilha)
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as.POSIXct(planilha$Hora, format = "%Y-%m-%d %H:%M:%S")
hora_inicial <- as.POSIXct("2023-03-23 18:40:53", format = "%Y-%m-%d %H:%M:%S")
hora_final <- as.POSIXct("2023-03-23 18:40:53", format = "%Y-%m-%d %H:%M:%S")
caminhada <- subset(planilha, Hora < hora_inicial)
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as.POSIXct(planilha$Hora, format = "%Y-%m-%d %H:%M:%S")
hora_inicial <- as.POSIXct("2023-03-23 18:40:53", format = "%Y-%m-%d %H:%M:%S")
hora_final <- as.POSIXct("2023-03-23 18:40:53", format = "%Y-%m-%d %H:%M:%S")
caminhada <- filter(planilha, Hora < hora_inicial)
planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as.POSIXct(planilha$Hora, format = "%Y-%m-%d %H:%M:%S")
hora_inicial <- as.POSIXct("2023-03-23 18:40:53", format = "%Y-%m-%d %H:%M:%S")
hora_final <- as.POSIXct("2023-03-23 18:40:53", format = "%Y-%m-%d %H:%M:%S")
caminhada <- planilha %>%  filter_time('2023-03-23 18:40:53'~'2023-03-23 18:45:12')
library(tibbletime)
install.packages("tibbletime")
library(tibbletime)
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as.POSIXct(planilha$Hora, format = "%Y-%m-%d %H:%M:%S")
hora_inicial <- as.POSIXct("2023-03-23 18:40:53", format = "%Y-%m-%d %H:%M:%S")
hora_final <- as.POSIXct("2023-03-23 18:40:53", format = "%Y-%m-%d %H:%M:%S")
caminhada <- planilha %>%  filter_time('2023-03-23 18:40:53'~'2023-03-23 18:45:12')
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as_tbl_time(planilha$Hora)
planilha$Hora <- as_tbl_time(planilha$Hora, index = date)
planilha$Hora <- as_tbl_time(planilha$Hora, index = planilha$Hora)
planilha$Hora <- as_tbl_time(planilha, index = planilha$Hora)
planilha$Hora <- as_tbl_time(planilha$Hora, index = Hora)
planilha <- as_tbl_time(planilha, index = Hora)
caminhada <- planilha %>%  filter_time('2023-03-23 18:40:53'~'2023-03-23 18:45:12')
View(caminhada)
as.numeric(input$ic)
intervalo = reactive({
as.numeric(input$ic)
})
intervalo()
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as.POSIXct(planilha$Hora, format = "%Y-%m-%d %H:%M:%S")
planilha <- as_tbl_time(planilha, index = Hora)
# Selecionar dados da caminhada
caminhada <- planilha %>%  filter_time('2023-03-23 18:40:53'~'2023-03-23 18:45:12')
intervalo = reactive({
as.integer(input$ic)
})
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as.POSIXct(planilha$Hora, format = "%Y-%m-%d %H:%M:%S")
planilha <- as_tbl_time(planilha, index = Hora)
# Selecionar dados da caminhada
caminhada <- planilha %>%  filter_time('2023-03-23 18:40:53'~'2023-03-23 18:45:12')
# Calculando média e desvio padrão
media <- mean(caminhada$Velocidade)
desvio_padrao <- sd(caminhada$Velocidade)
# Obtendo tamanho da amostra
n <- nrow(caminhada)
# Obtendo tamanho da amostra
n <- as.integer(nrow(caminhada))
# Obtendo tamanho da amostra
n <- as.numeric(nrow(caminhada))
runApp('main.R')
runApp('main.R')
runApp('main.R')
# ========================================= Criação do mapa =========================================
# recebendo os dados da planilha
planilha <- read_excel("dados_de_caminhada_corrida.xlsx")
planilha <- separate(planilha, Coordenadas, into = c("Latitude", "Longitude"), sep = ", ")
planilha$Velocidade <- as.numeric(gsub(" km/h", "", planilha$Velocidade))
planilha$Hora <- as.POSIXct(planilha$Hora, format = "%Y-%m-%d %H:%M:%S")
planilha <- as_tbl_time(planilha, index = Hora)
# Selecionar dados da caminhada
caminhada <- planilha %>%  filter_time('2023-03-23 18:40:53'~'2023-03-23 18:45:12')
# Calculando média e desvio padrão
media <- mean(caminhada$Velocidade)
desvio_padrao <- sd(caminhada$Velocidade)
# Obtendo tamanho da amostra
n <- as.numeric(nrow(caminhada))
# Obtendo valor crítico z para o nível de confiança
z <- reactive({qnorm((1 + intervaloInput()) / 2)})
# Obtendo valor crítico z para o nível de confiança
#z <- reactive({qnorm((1 + intervaloInput()) / 2)})
z <- qnorm((1 + 0.95) / 2)
# Calculando erro padrão da média
erro_padrao <- desvio_padrao / sqrt(n)
# Calculando intervalo de confiança
intervalo <- c(media - z * erro_padrao, media + z * erro_padrao)
intervalo[1]
intervalo[2]
runApp('main.R')
View(caminhada)
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
library(shiny); runApp('main.R')
runApp('main.R')
runApp('main.R')
library(shiny); runApp('main.R')
